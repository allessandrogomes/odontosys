generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Receptionist {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  phone     String   @unique
  createdAt DateTime @default(now())
  cpf       String      @unique
  birthDate String
}

model Dentist {
  id                    Int      @id @default(autoincrement())
  name                  String
  email                 String   @unique
  phone                 String   @unique
  createdAt             DateTime @default(now())
  cpf                   String      @unique
  birthDate             String
  croNumber             String      @unique
  specialty             String
  appointments          Appointment[]
  prescriptions         Prescription[]
  completedAppointments CompletedAppointment[]
  cancelledAppointments CancelledAppointment[]
}

model Patient {
  id                    Int      @id @default(autoincrement())
  name                  String
  email                 String   @unique
  phone                 String   @unique
  createdAt             DateTime @default(now())
  cpf                   String      @unique
  birthDate             String
  medicalHistory        Int[]
  appointments          Appointment[]
  prescriptions         Prescription[]
  completedAppointments CompletedAppointment[]
  cancelledAppointments CancelledAppointment[]
}

enum AppointmentStatus {
  AGENDADA
  CONCLUIDA
  CANCELADA
}

model Appointment {
  id            Int                @id @default(autoincrement())
  patient       Patient            @relation(fields: [patientId], references: [id])
  patientId     Int
  dentist       Dentist            @relation(fields: [dentistId], references: [id])
  dentistId     Int
  scheduledAt   DateTime
  procedure     String
  status        AppointmentStatus  @default(AGENDADA)
  createdAt     DateTime           @default(now())
}

model CompletedAppointment {
  id            Int                @id
  patient       Patient            @relation(fields: [patientId], references: [id])
  patientId     Int
  dentist       Dentist            @relation(fields: [dentistId], references: [id])
  dentistId     Int
  scheduledAt   DateTime
  procedure     String
  status        AppointmentStatus  @default(CONCLUIDA)
  createdAt     DateTime           @default(now())
}

model CancelledAppointment {
  id            Int                @id
  patient       Patient            @relation(fields: [patientId], references: [id])
  patientId     Int
  dentist       Dentist            @relation(fields: [dentistId], references: [id])
  dentistId     Int
  scheduledAt   DateTime
  procedure     String
  status        AppointmentStatus  @default(CONCLUIDA)
  reason        String?
  createdAt     DateTime           @default(now())
}

model Prescription {
  id                    Int       @id @default(autoincrement())
  patient               Patient   @relation(fields: [patientId], references: [id])
  patientId             Int
  dentist               Dentist   @relation(fields: [dentistId], references: [id])
  dentistId             Int       
  prescriptionDetails   String
  createdAt             DateTime  @default(now())
}